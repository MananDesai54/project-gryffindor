services:
  # mongodb:
  #   image: mongo:8.0
  #   container_name: mongodb
  #   restart: unless-stopped
  #   env_file:
  #     - packages/server/env/.env
  #   volumes:
  #     - mongo_data:/data/db
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - database

  chroma:
    image: chromadb/chroma:1.0.16.dev45
    container_name: chroma
    ports:
      - '8000:8000'
    volumes:
      - chroma_data:/data
    environment:
      - CHROMA_DB_IMPL=duckdb # Default in-memory or persistent DuckDB
    healthcheck:
      test:
        ['CMD', '/bin/bash', '-c', 'cat < /dev/null > /dev/tcp/localhost/8000']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - database

  kafka:
    image: apache/kafka:4.1.0-rc0
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test:
        [
          'CMD-SHELL',
          '/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --list',
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - messaging

  server:
    build:
      dockerfile: packages/server/Dockerfile
    container_name: gryffindor-server
    env_file:
      - packages/server/env/.env
    environment:
      - NODE_ENV=development
      - PORT=3000
    depends_on:
      # mongodb:
      #   condition: service_healthy
      chroma:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - '3000:3000'
    volumes:
      - ./packages/server/secret:/mnt/gryffindor/secret
    develop:
      watch:
        - path: ./packages/server
          action: rebuild
    networks:
      - default
      - messaging
      - database

  # client:
  #   build:
  #     dockerfile: packages/client/Dockerfile
  #   container_name: gryffindor-client
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3001
  #   ports:
  #     - "3001:3001"
  #   develop:
  #     watch:
  #       - path: ./packages/client
  #         action: rebuild
  #   depends_on:
  #     server:
  #       condition: service_started
  #   networks:
  #     - default

volumes:
  mongo_data:
  chroma_data:
    driver: local

networks:
  messaging:
    driver: bridge
  default:
    driver: bridge
  database:
    driver: bridge
